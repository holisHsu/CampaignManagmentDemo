# Generated by Django 5.2.6 on 2025-10-02 15:33
from decimal import Decimal
import logging
import json

from django.db import models
from django.db import migrations
from django.core.management.color import no_style
from django.db import connection


logger = logging.getLogger(__name__)


def _reset_auto_increment(Model: type[models.Model]):
    """
    Because id is auto increment field,
        after insert data with hardcoded id,
        we have to reset auto increment to avoid duplicate id be generated.
    """
    style = no_style()
    sql = connection.ops.sequence_reset_sql(style, [Model])
    with connection.cursor() as cursor:
        for line in sql:
            cursor.execute(line)


def seed_sample_data(apps, schema_editor):
    Campaign = apps.get_model('placements_io', 'Campaign')
    LineItem = apps.get_model('placements_io', 'LineItem')

    with open('placements_io/migrations/data/placements_teaser_data.json', 'r') as f:
        sample_data: list[dict] = json.load(f)

    # Map structure for bulk create
    campaigns = {}
    line_items = {}

    for row in sample_data:
        campaign_id, campaign_name = row['campaign_id'], row['campaign_name']
        # Only create campaign if id doesn't exist
        if campaign_id not in campaigns:
            campaigns[campaign_id] = Campaign(id=campaign_id, name=campaign_name)

        line_item_id = row['id']
        line_item_name = row['line_item_name']

        # Convert to string then to Decimal to avoid precision loss
        booked_amount = Decimal(str(row['booked_amount']))
        actual_amount = Decimal(str(row['actual_amount']))
        adjustment_amount = Decimal(str(row['adjustments']))

        if line_item_id not in line_items:
            line_items[line_item_id] = LineItem(
                id=line_item_id,
                name=line_item_name,
                booked_amount=booked_amount,
                actual_amount=actual_amount,
                adjustment_amount=adjustment_amount,
                campaign_id=campaign_id,
            )

    # Take 2 insert queries
    Campaign.objects.bulk_create(campaigns.values())
    LineItem.objects.bulk_create(line_items.values())

    _reset_auto_increment(Campaign)
    _reset_auto_increment(LineItem)


def reverse_seed_sample_data(apps, schema_editor):
    """
    Simply delete all campaigns and line items because it's demo
    """
    Campaign = apps.get_model('placements_io', 'Campaign')
    LineItem = apps.get_model('placements_io', 'LineItem')

    Campaign.objects.all().delete()
    LineItem.objects.all().delete()

    _reset_auto_increment(Campaign)
    _reset_auto_increment(LineItem)


class Migration(migrations.Migration):

    dependencies = [
        ('placements_io', '0002_create_basic_models'),
    ]

    operations = [
        migrations.RunPython(seed_sample_data, reverse_code=reverse_seed_sample_data),
    ]
